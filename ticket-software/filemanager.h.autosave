#ifndef FILEMANAGER_H
#define FILEMANAGER_H

#include <QString>
#include <QVector>


class FileManager
{
public:
    FileManager();

    struct Log {
        int uniqueIdentifier;
        int creationTime;
        QString description;
        bool isConsole;
    };

    struct Ticket {
        int uniqueIdentifier;
        int creationTime;
        int priority;
        QString title;
        QString system;
        QString progress;
        QString description;
        bool isOpen;

        QVector<Log> logs;
    };

    struct Project {
        int uniqueIdentifier;
        QString name;
        QString description;

        QVector<Ticket> tickets;
    };

    QVector<Project> formatProjects(QString projectData) {
        projectData = "0/,UntitledMMO/,An MMO/,/~0/,1667343548/,0/,Crash on load/,Save System/,Actively Worked On/,Game crashes when trying to save, big problem/,1/,/`0/,1667343548/,Ticket created/,1/`/`0/,1667843654/,This needs to be fixed asap./,0/`/~/,";
        QVector<Project> projects;
        bool readingSpecial = false;
        QVector<int> columns = {0};
        QString itemStr = "";
        Log currentLog;
        Ticket currentTicket;
        Project currentProject;
        for (QChar const &c: projectData) {
            if (c == '/') {
                readingSpecial = true;
                continue;
            }
            if (readingSpecial) {
                readingSpecial = false;
                if (c == ',') {
                    switch (columns.size()) {
                    case 1:
                        switch (columns[0]) {
                        case 0:
                            currentProject.uniqueIdentifier = itemStr.toInt();
                            break;
                        case 1:
                            currentProject.name = itemStr;
                            break;
                        case 2:
                            currentProject.description = itemStr;
                            break;
                        case 3:
                            projects.push_back(currentProject);
                        }
                        break;
                    case 2:
                        switch (columns[0]) {
                            case 0:
                                currentTicket.uniqueIdentifier = itemStr.toInt();
                                break;
                            case 1:
                                currentTicket.creationTime = itemStr.toInt();
                                break;
                            case 2:
                                currentTicket.priority = itemStr.toInt();
                                break;
                            case 3:
                                currentTicket.title = itemStr;
                                break;
                            case 4:
                                currentTicket.system = itemStr;
                                break;
                            case 5:
                                currentTicket.progress = itemStr;
                                break;
                            case 6:
                                currentTicket.description = itemStr;
                                break;
                            case 7:
                                currentTicket.isOpen = (itemStr[0] == '1');
                                break;
                            case 
                        }
                    }
                    columns[0]++;
                } else if (c == '~') {
                    if (columns.size() == 2) {
                        columns.pop_front();
                    } else {
                        columns.push_front(0);
                    }
                } else if (c == '`') {
                    if (columns.size() == 3) {
                        columns.pop_front();
                    } else {
                        columns.push_front(0);
                    }
                }
                itemStr = "";
                continue;
            }
            itemStr.append(c);
        }
        return projects;
    };

};

#endif // FILEMANAGER_H
